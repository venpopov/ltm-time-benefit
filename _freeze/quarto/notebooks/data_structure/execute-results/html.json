{
  "hash": "1ad9bd8fdefc1bfafcc57103cf61c1c4",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"View the data structure\"\nformat: \n  html: \n    code-fold: true\n---\n\n\n## Overview\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(targets)\ntar_source()\ntar_load(c(exp1_data, exp2_data, exp1_data_agg, exp2_data_agg))\n```\n:::\n\n\nThe datafiles for the two experiments are in objects `exp1_data` and `exp2_data`. Let's first look at the structure of the data for experiment 1.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(exp1_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    id trial condition enccons serpos response duration cor  chunk  gap      rt itemtype\n1 7504     0         4       D      1        D  2576.88   1 random 3000 2.57688    SP1-3\n2 7504     0         4       P      2            309.44   0 random 3000 0.30944    SP1-3\n3 7504     0         4       Q      3        D   760.36   0 random 3000 0.76036    SP1-3\n4 7504     0         4       J      4        D  1939.52   0 random 3000 1.93952    SP4-6\n5 7504     0         4       G      5        D  3935.02   0 random 3000 3.93502    SP4-6\n6 7504     0         4       W      6        W  2010.84   1 random 3000 2.01084    SP4-6\n```\n\n\n:::\n:::\n\n\nFrom Eda I know that the condition column is coded like this:\n\n| condition | LTM      | ISI   |\n|-----------|----------|-------|\n| 1         | chunk    | short |\n| 2         | no-chunk | short |\n| 3         | chunk    | long  |\n| 4         | no-chunk | long  |\n\nLet's confirm this:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexp1_data |>\n  select(condition, chunk, gap) |>\n  unique() |>\n  arrange(condition)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  condition  chunk  gap\n1         1  known  500\n2         2 random  500\n3         3  known 3000\n4         4 random 3000\n```\n\n\n:::\n:::\n\n\nthere are this many trials per participant:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmax(as.numeric(exp1_data$trial)) + 1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 80\n```\n\n\n:::\n:::\n\n\n## Aggregate data\n\nThis is what the aggregated data looks like:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexp1_data_agg\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 12 Ã— 8\n   chunk    gap itemtype n_total n_correct p_correct   ISI item_in_ltm\n   <chr>  <dbl> <chr>      <int>     <dbl>     <dbl> <dbl> <lgl>      \n 1 known    500 SP1-3       1855      1715     0.925   0.5 TRUE       \n 2 known    500 SP4-6       1858      1368     0.736   0.5 FALSE      \n 3 known    500 SP7-9       1851       943     0.509   0.5 FALSE      \n 4 known   3000 SP1-3       1859      1721     0.926   3   TRUE       \n 5 known   3000 SP4-6       1858      1443     0.777   0.5 FALSE      \n 6 known   3000 SP7-9       1856      1032     0.556   0.5 FALSE      \n 7 random   500 SP1-3       1853      1495     0.807   0.5 FALSE      \n 8 random   500 SP4-6       1856      1177     0.634   0.5 FALSE      \n 9 random   500 SP7-9       1855       727     0.392   0.5 FALSE      \n10 random  3000 SP1-3       1856      1553     0.837   3   FALSE      \n11 random  3000 SP4-6       1858      1287     0.693   0.5 FALSE      \n12 random  3000 SP7-9       1856       838     0.452   0.5 FALSE      \n```\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}