{
  "hash": "85494d69123ad8252914d60e17105666",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Playground\"\nformat: html\ndraft: true\n---\n\n\n\n\nTODO: Make a shiny app for general recovery model - add ability to change setsize, ISI, etc.\n\nHere's a simple plot of the primacy effect interaction with ISI.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(purrr)\nlibrary(tibble)\nlibrary(tidyr)\nlibrary(targets)\ntar_source()\n\nsetsize <- 30\npars <- tibble(ISI = seq(0.25, 2, 0.25))\nsim <- pars %>%\n  mutate(strength = map(ISI, \\(x) serial_recall(\n    setsize,\n    ISI = rep(x, setsize),\n    growth = \"asy\",\n    return = \"strength\"\n  ))) |>\n  unnest(strength) |>\n  group_by(ISI) |>\n  mutate(position = row_number())\n\nsim |>\n  ggplot(aes(x = position, y = strength, color = as.factor(ISI))) +\n  geom_line() +\n  geom_point() +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](playground_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n\n```{.r .cell-code}\nsim <- pars %>%\n  mutate(strength = map(ISI, \\(x) serial_recall(\n    setsize,\n    ISI = rep(x, setsize),\n    rate = 0.03,\n    growth = \"linear\",\n    return = \"strength\"\n  ))) |>\n  unnest(strength) |>\n  group_by(ISI) |>\n  mutate(position = row_number())\n\nsim |>\n  ggplot(aes(x = position, y = strength, color = as.factor(ISI))) +\n  geom_line() +\n  geom_point() +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](playground_files/figure-html/unnamed-chunk-1-2.png){width=672}\n:::\n\n```{.r .cell-code}\nsim <- pars %>%\n  mutate(strength = map(ISI, \\(x) serial_recall(\n    setsize,\n    ISI = rep(x, setsize),\n    prop = 0.4,\n    rate = 0.03,\n    lambda = 0.5,\n    growth = \"linear\",\n    return = \"strength\"\n  ))) |>\n  unnest(strength) |>\n  group_by(ISI) |>\n  mutate(position = row_number())\n\nsim |>\n  ggplot(aes(x = position, y = strength, color = as.factor(ISI))) +\n  geom_line() +\n  geom_point() +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](playground_files/figure-html/unnamed-chunk-1-3.png){width=672}\n:::\n\n```{.r .cell-code}\nsim <- pars %>%\n  mutate(strength = map(ISI, \\(x) serial_recall(\n    setsize,\n    ISI = rep(x, setsize),\n    growth = \"asy\",\n    return = \"strength\",\n    lambda = 0.5\n  ))) |>\n  unnest(strength) |>\n  group_by(ISI) |>\n  mutate(position = row_number())\n\nsim |>\n  ggplot(aes(x = position, y = strength, color = as.factor(ISI))) +\n  geom_line() +\n  geom_point() +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](playground_files/figure-html/unnamed-chunk-1-4.png){width=672}\n:::\n:::\n\n\n\n\n\nmodel for Ma, Popov and Zhang:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrun_model <- function(data, tau=0.2, delta=0.144, r_rate=0.053, theta=0.27, sigma=0.14, isi=2.6,  W1 = 1) {\n  f <- 1-tau*(1-data$B_prior)**2\n  f_mat <- matrix(rep(f,length(f)), nrow=length(f), ncol=length(f))\n  f_mat[upper.tri(f_mat)] <- 1\n  f_cum_prod_mat <- matrixStats::colCumprods(f_mat)\n  f_cum_prod_mat <- f_cum_prod_mat[,-1]\n  f_cum_prod_mat[upper.tri(f_cum_prod_mat, diag=T)] <- 0\n  \n  D_mat <- matrix(0:nrow(f_cum_prod_mat), nrow=nrow(f_cum_prod_mat), ncol=ncol(f_cum_prod_mat)+2)[,-c(ncol(f_cum_prod_mat)+1, ncol(f_cum_prod_mat)+2)]\n  D_mat[upper.tri(D_mat)] <- 0\n  \n  \n  Ws <- W1*(1-delta)**(1:length(f))*cumprod(f) + r_rate*isi*rowSums((1-delta)**D_mat*f_cum_prod_mat) + r_rate*isi  #0.179\n  \n  data$res_av_st <- c(1,Ws[-nrow(data)])\n  data$epi_B <- sqrt(delta*data$res_av_st*f) \n  data$prob <- pnorm(data$epi_B, theta, sigma)\n  return(data)\n}\n\ntar_load(exp1_data_agg)\nexp1_data_agg$B_prior <- ifelse(exp1_data_agg$item_in_ltm, 0.4, 0.2)\n\nrun_model(filter(exp1_data_agg, gap == 500, chunk == \"known\"), isi=0.5)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 Ã— 12\n  chunk   gap itemtype n_total n_correct p_correct   ISI item_in_ltm B_prior res_av_st epi_B  prob\n  <chr> <dbl> <chr>      <int>     <dbl>     <dbl> <dbl> <lgl>         <dbl>     <dbl> <dbl> <dbl>\n1 known   500 SP1-3       1855      1715     0.925   0.5 TRUE            0.4     1     0.366 0.753\n2 known   500 SP4-6       1858      1368     0.736   0.5 FALSE           0.2     0.821 0.321 0.642\n3 known   500 SP7-9       1851       943     0.509   0.5 FALSE           0.2     0.639 0.283 0.538\n```\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}